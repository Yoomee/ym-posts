.post.mb-2{ id: "post#{post.id}" }
  .post-top
    .pull-left
      =link_to(image_for(post.user, '40x40#'), post.user)
      =link_to_self(post.user)
      -if post.target
        %i.fa.fa-chevron-right
        =link_to_self(post.target)
      %br
      %time{ datetime: short_date(post.created_at) }
        %span.small-info-text
          =time_ago_in_words(post.created_at)
          ago
    =link_if_can('', [:destroy, post], method: :delete, confirm: 'Are you sure?', remote: true, icon: 'trash-o', class: 'post-delete')
    .clear
  -if post.text.present? || post.file
    .post-content
      -if post.text.present?
        =simple_format(auto_link(post.text))
      -if post.file
        =link_if_can([:file, post]) do
          %i{ class: "fa fa-file-#{post.file_ext}-o" }
          =post.file_name
  -if post.image
    .post-image
      =link_to('#', data: { toggle: 'modal', backdrop: false, modal_url: modal_post_path(post), modal_id: 'post_modal' }) do
        =image_for(post, '750x400#', class: "#{ post.has_video? ? 'video-image' : '' }")
    -if post.has_video? && post.video_title.present?
      .post-content
        =link_to(post.video_title, "#", :data => { toggle: 'modal', backdrop: false, modal_url: modal_post_path(post), modal_id: 'post_modal' })
        %br
        =link_to(post.video_youtube? ? 'youtube.com' : 'vimeo.com', post.video_url, target: '_blank', class:  'small-info-text')
        -if post.video_description.present?
          %p=strip_tags(post.video_description)
    .clear
  -if post.tags.present?
    .post-tags.mb-1
      -post.tags.each do |tag|
        =link_to_tag(tag, class: 'pull-left mr-1')
    .clear
  .comments
    =link_to(comments_link_text(post), '#', class: 'toggle-comments', icon: 'comments')
    .comment-list
      =render(partial: 'comments/comment', collection: post.comments)
    -if can?(:new, Comment)
      =render('comments/form', comment: post.comments.build)
